services:
  postgres:
    image: postgres:15
    container_name: postgres-${COOLIFY_BRANCH:-local}
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network_${COOLIFY_BRANCH:-local}

  cache:
    image: redis:latest
    container_name: redis_cache-${COOLIFY_BRANCH:-local}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network_${COOLIFY_BRANCH:-local}


  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: express-vue-app-${COOLIFY_BRANCH:-local}
    environment:
      POSTGRES_URL: postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-mydatabase}
    depends_on:
      postgres:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - public_app_data:/app/public
    networks:
      - app_network_${COOLIFY_BRANCH:-local}

volumes:
  postgres_data:
    name: postgres_data_${COOLIFY_BRANCH:-local}
  redis_data:
    name: redis_data_${COOLIFY_BRANCH:-local}
  public_app_data:
    name: public_app_data_${COOLIFY_BRANCH:-local}

networks:
  app_network_${COOLIFY_BRANCH:-local}:
    driver: bridge